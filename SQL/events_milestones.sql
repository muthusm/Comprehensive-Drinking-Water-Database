USE CDWD;

DROP TABLE IF EXISTS EVENTS_MILESTONES;
CREATE TABLE EVENTS_MILESTONES (
	SUBMISSIONYEARQUARTER     VARCHAR(6),
	PWSID                     VARCHAR(9),
	EVENT_SCHEDULE_ID         VARCHAR(255),
	EVENT_END_DATE            DATE,
	EVENT_ACTUAL_DATE         DATE,
	EVENT_COMMENTS_TEXT       TEXT,
	EVENT_MILESTONE_CODE      VARCHAR(4),
	EVENT_REASON_CODE         VARCHAR(4),
	FIRST_REPORTED_DATE       DATE,
	LAST_REPORTED_DATE        DATE,
primary key(PWSID, EVENT_SCHEDULE_ID)
) ENGINE = InnoDB;


LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/EVENTS_MILESTONES.csv'
INTO TABLE EVENTS_MILESTONES 
FIELDS TERMINATED BY ','
ESCAPED BY ''
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(@SUBMISSIONYEARQUARTER,@PWSID,@EVENT_SCHEDULE_ID,@EVENT_END_DATE,@EVENT_ACTUAL_DATE,@EVENT_COMMENTS_TEXT,@EVENT_MILESTONE_CODE,@EVENT_REASON_CODE,@FIRST_REPORTED_DATE,@LAST_REPORTED_DATE)
SET
SUBMISSIONYEARQUARTER = IF(@SUBMISSIONYEARQUARTER = '', NULL, @SUBMISSIONYEARQUARTER),
PWSID = IF(@PWSID = '', NULL, @PWSID),
EVENT_SCHEDULE_ID = IF(@EVENT_SCHEDULE_ID = '', NULL, @EVENT_SCHEDULE_ID),
EVENT_END_DATE = IF(@EVENT_END_DATE = '', NULL, STR_TO_DATE(@EVENT_END_DATE, '%Y-%m-%d')),
EVENT_ACTUAL_DATE = IF(@EVENT_ACTUAL_DATE = '', NULL, STR_TO_DATE(@EVENT_ACTUAL_DATE, '%Y-%m-%d')),
EVENT_COMMENTS_TEXT = IF(@EVENT_COMMENTS_TEXT = '', NULL, @EVENT_COMMENTS_TEXT),
EVENT_MILESTONE_CODE = IF(@EVENT_MILESTONE_CODE = '', NULL, @EVENT_MILESTONE_CODE),
EVENT_REASON_CODE = IF(@EVENT_REASON_CODE = '', NULL, @EVENT_REASON_CODE),
FIRST_REPORTED_DATE = IF(@FIRST_REPORTED_DATE = '', NULL, STR_TO_DATE(@FIRST_REPORTED_DATE, '%Y-%m-%d')),
LAST_REPORTED_DATE = IF(@LAST_REPORTED_DATE = '', NULL, STR_TO_DATE(@LAST_REPORTED_DATE, '%Y-%m-%d'));


-- Adding index for effective filtering using select query
ALTER TABLE EVENTS_MILESTONES
ADD INDEX idx_EVENT_END_DATE (EVENT_END_DATE);

ALTER TABLE EVENTS_MILESTONES
ADD INDEX idx_EVENT_ACTUAL_DATE (EVENT_ACTUAL_DATE);

ALTER TABLE EVENTS_MILESTONES
ADD INDEX idx_EVENT_MILESTONE_CODE (EVENT_MILESTONE_CODE);

ALTER TABLE EVENTS_MILESTONES
ADD INDEX idx_EVENT_REASON_CODE (EVENT_REASON_CODE);

-- ALTER TABLE EVENTS_MILESTONES
-- ADD INDEX idx_EVENT_END_DATE (EVENT_END_DATE);

-- PWSID, EVENT_SCHEDULE_ID, EVENT_END_DATE, EVENT_ACTUAL_DATE, EVENT_MILESTONE_CODE, EVENT_REASON_CODE,